{"version":3,"sources":["Components/Expenses/ExpenseDate.js","Components/UI/Card.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpensesList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/ExpensesFilter.js","Components/Expenses/Expenses.js","Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","expenseYear","date","getFullYear","expenseMonth","toLocaleString","month","expenseDay","day","React","createElement","Fragment","className","Card","children","ExpenseItem","title","amount","ExpensesList","item","length","map","x","key","id","ChartBar","barFillHeight","maxValue","value","style","height","label","Chart","_step","dataPointValues","items","datapoint","totalMaximum","_iterator","_createForOfIteratorHelper","s","n","done","Number","err","e","f","ExpensesChart","chartDataPoints","chartExpense","expense","getMonth","ExpensesFilter","selectedDefaultValue","onChange","event","expenseFilterState","target","Expenses","expenseArr","_useState","useState","_useState2","_slicedToArray","currstate","setCurrState","filteredExpenseArr","filter","changedState","console","log","ExpenseForm","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","onSubmit","preventDefault","expenseFormDatas","Date","onSaveExpenseData","type","prevState","_objectSpread","min","step","onClick","onCancel","NewExpense","newExpenseform","setNewExpenseForm","enteredExpenseData","formExpenseData","Math","random","toString","onSaveExpenseDataApp","dummyExpenses","App","setExpense","concat","_toConsumableArray","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d0d25c0a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\n\r\nexport default function ExpenseDate(props) {\r\n  const expenseYear = props.date.getFullYear();\r\n  const expenseMonth = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const expenseDay = props.date.toLocaleString(\"en-US\", { day: \"numeric\" });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{expenseMonth}</div>\r\n        <div className=\"expense-date__day\">{expenseDay}</div>\r\n        <div className=\"expense-date__year\">{expenseYear}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\nconst Card = (props) => {\r\n  const className = \"card \" + props.className;\r\n  return (\r\n    <>\r\n      <div className={className}>{props.children}</div>\r\n    </>\r\n  );\r\n};\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nexport default function ExpenseItem(props) {\r\n  return (\r\n    <>\r\n      <li>\r\n        <Card className=\"expense-item\">\r\n          <ExpenseDate date={props.date}></ExpenseDate>\r\n          <div className=\"expense-item__description\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"expense-item__price\">${props.amount}</div>\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nconst ExpensesList = (props) => {\r\n  if (props.item.length === 0) {\r\n    return <h2 className=\"expense-list__fallback\">No expense items</h2>;\r\n  }\r\n  return props.item.map((x) => {\r\n    return (\r\n      <ul className=\"expenses-list\">\r\n        <ExpenseItem\r\n          key={x.id}\r\n          title={x.title}\r\n          amount={x.amount}\r\n          date={x.date}\r\n        ></ExpenseItem>\r\n      </ul>\r\n    );\r\n  });\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React, { useState } from \"react\";\r\nimport \"./ChartBar.css\";\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = (props.value / props.maxValue) * 100 + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React, { useState } from \"react\";\r\nimport \"./Chart.css\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.items.map((datapoint) => datapoint.value);\r\n  let totalMaximum = 0;\r\n  for (let item of dataPointValues) totalMaximum += Number(item);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.items.map((item) => {\r\n        return (\r\n          <ChartBar\r\n            key={item.label}\r\n            value={item.value}\r\n            label={item.label}\r\n            maxValue={totalMaximum}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n  for (let expense of props.chartExpense) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart items={chartDataPoints} />;\r\n};\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const optionChangeHandler = (event) => {\r\n    props.expenseFilterState(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select\r\n          value={props.selectedDefaultValue}\r\n          onChange={optionChangeHandler}\r\n        >\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\n\r\nfunction Expenses(props) {\r\n  const expenseArr = props.expense;\r\n  const [currstate, setCurrState] = useState(2021);\r\n  const expenseFilterStateChanged = (changedState) => {\r\n    setCurrState(changedState);\r\n    console.log(typeof currstate);\r\n  };\r\n  const filteredExpenseArr = expenseArr.filter((x) => {\r\n    return x.date.getFullYear() === Number(currstate);\r\n  });\r\n  return (\r\n    <>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selectedDefaultValue={currstate}\r\n          expenseFilterState={expenseFilterStateChanged}\r\n        ></ExpensesFilter>\r\n        <ExpensesChart chartExpense={filteredExpenseArr}></ExpensesChart>\r\n        <ExpensesList item={filteredExpenseArr}></ExpensesList>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  const [userInput, setUserInput] = useState({\r\n    enteredTitle: \"\",\r\n    enteredAmount: \"\",\r\n    enteredDate: \"\",\r\n  });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredTitle: event.target.value };\r\n    });\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredAmount: event.target.value };\r\n    });\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredDate: event.target.value };\r\n    });\r\n  };\r\n\r\n  // SUBMIT EVENT\r\n\r\n  const submitEventHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseFormDatas = {\r\n      title: userInput.enteredTitle,\r\n      amount: +userInput.enteredAmount,\r\n      date: new Date(userInput.enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseFormDatas);\r\n    setUserInput({\r\n      enteredTitle: \"\",\r\n      enteredAmount: \"\",\r\n      enteredDate: \"\",\r\n    });\r\n  };\r\n\r\n  //DATA TRANSFER ENDS\r\n\r\n  return (\r\n    <form onSubmit={submitEventHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={userInput.enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={userInput.enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-03-03\"\r\n            value={userInput.enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\nconst NewExpense = (props) => {\r\n  //DATA HANDLER\r\n  const expenseDataSaveHandler = (enteredExpenseData) => {\r\n    const formExpenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n\r\n    props.onSaveExpenseDataApp(formExpenseData);\r\n    // DATA HANDLER ENDS\r\n  };\r\n  const [newExpenseform, setNewExpenseForm] = useState(false);\r\n  const newExpenseFormClickHandler = () => {\r\n    setNewExpenseForm(true);\r\n  };\r\n  const cancelBtnClickHandler = () => {\r\n    setNewExpenseForm(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!newExpenseform && (\r\n        <button key={\"addExpenseBtn\"} onClick={newExpenseFormClickHandler}>\r\n          Add New Expense\r\n        </button>\r\n      )}\r\n      {newExpenseform && (\r\n        <ExpenseForm\r\n          key={\"ExpenseForm\"}\r\n          onCancel={cancelBtnClickHandler}\r\n          onSaveExpenseData={expenseDataSaveHandler}\r\n        ></ExpenseForm>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Expenses from \"./Components/Expenses/Expenses\";\nimport NewExpense from \"./Components/NewExpense/NewExpense\";\nimport ExpensesChart from \"./Components/Expenses/ExpensesChart\";\nconst dummyExpenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 3, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 994.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2022, 5, 12),\n  },\n];\nfunction App() {\n  const [expense, setExpense] = useState(dummyExpenses);\n  // NEW EXPENSE DATA TRANSFER\n  const SaveExpenseDataApp = (enteredExpenseData) => {\n    console.log(\"App JS\");\n    setExpense((x) => {\n      return [enteredExpenseData, ...expense];\n    });\n\n    //NEW EXPENSE DATA TRANSFER DONE\n  };\n  return (\n    <div className=\"App\">\n      <NewExpense onSaveExpenseDataApp={SaveExpenseDataApp}></NewExpense>\n      <Expenses expense={expense} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}